%simbolic constants
q = sym('q',[1 3]);
dq = sym('dq',[1 3]);
ddq = sym('ddq',[1 3]);
syms q1 q2 q3 dq1 dq2 dq3 ddq1 ddq2 ddq3 'real'
syms  L1 L2 L3 'real'
%matrix declaration
T10=[ cos(q1) -sin(q1) 0 0
      sin(q1)  cos(q1) 0 0 
      0         0      1 L1
      0         0      0 1];

T21=[ sin(q2)  cos(q2)   0 0
      0         0      1 0
      cos(q2)    -sin(q2)   0 0
      0         0      0 1];
  
T32=[ cos(q3)   -sin(q3) 0 L2
      0         0        1 0
      -sin(q3)   -cos(q3)   0 0
      0         0        0 1];
  
T43=[0    0     1   L3
    0     -1    0   0
    1     0     0   0
    0     0     0   1];
  
%the geometrical model  
T30=T10*T21*T32*T43;

%to obtain the kinematic model

%defining the rotation matrices
R10=T10(1:3,1:3);
R21=T21(1:3,1:3);
R32=T32(1:3,1:3);
R30=T30(1:3,1:3);

%position vector<?
r1=T10(1:3,4:4);
r2=T21(1:3,4:4);
r3=T32(1:3,4:4);
r4=T43(1:3,4:4);
%robot base, initial values
w0=[0 0 0]';
dw0=[0 0 0]';
v0=[0 0 0]';
syms g%gravitational acceleration
dv0=[0 0 g]';
k=[0 0 1]';
%angular velocity
w1=R10'*w0 + dq1*k;
w2=R21'*w1 + dq2*k;
w3=R32'*w2 + dq3*k;

%skew symmetric matrices
w0x=skewSymmetric(w0);
w1x=skewSymmetric(w1);
w2x=skewSymmetric(w2);
w3x=skewSymmetric(w3);

%linear velocity
v1=R10'*(v0+w0x*r1);
v2=R21'*(v1+w1x*r2);
v3=R32'*(v2+w2x*r3);

%angular acceleration
dw1=R10'*dw0+R10'*w0x*dq1*k+ddq1*k;
dw2=R21'*dw1+R21'*w1x*dq2*k+ddq2*k;
dw3=R32'*dw2+R32'*w2x*dq3*k+ddq3*k;

%skew symmetric matrices
dw0x=skewSymmetric(dw0);
dw1x=skewSymmetric(dw1);
dw2x=skewSymmetric(dw2);
dw3x=skewSymmetric(dw3);

%linear acceleration
dv1=R10'*(dv0+dw0x*r1+w0x*w0x*r1);
dv2=R21'*(dv1+dw1x*r2+w1x*w1x*r2);
dv3=R32'*(dv2+dw2x*r3+w2x*w2x*r3);

%final relation
    %velocitiy
    w0_3=R30*w3;
    v0_3=R30*v3;
    %accelerations
    dw0_3=R30*dw3;
    dv0_3=R30*dv3;
    
%dynamical model

rc1=[0 0 L1/2]';
%rc1=[0 0 L1]';
rc2=[L2/2 0 0]';
rc3=[L3/2 0 0]';
%rc3=[L2 0 0]';

vc1=dv1+dw1x*rc1+w1x*w1x*rc1;
vc2=dv2+dw2x*rc2+w2x*w2x*rc2;
vc3=dv3+dw3x*rc3+w3x*w3x*rc3;

%mass of elements
syms M1 M2 M3 'real'

%external forces
F1=M1*vc1;
F2=M2*vc2;
F3=M3*vc3;

%inertia moments matrix:
syms I1x I1y I1z I2x I2y I2z I3x I3y I3z 'real'
I1=[I1x 0 0; 0 I1y 0; 0 0 I1z];
I2=[I2x 0 0; 0 I2y 0; 0 0 I2z];
I3=[I3x 0 0; 0 I3y 0; 0 0 I3z];
%I1=eye(3);
%I2=eye(3);
%external torques generate by the force Fi
N1=I1*dw1+w1x*I1*w1;
N2=I2*dw2+w2x*I2*w2;
N3=I3*dw3+w3x*I3*w3;

%connection forces
f4=[0 0 0]';
n4=[0 0 0]';
%empty matrix
R43=zeros(3);

f3=R43*f4+F3;
%f3=[0 0 0]';
f2=R32*f3+F2;
f1=R21*f2+F1;

%skew symmetric matrices
rc1x=skewSymmetric(rc1);
rc2x=skewSymmetric(rc2);
rc3x=skewSymmetric(rc3);

r1x=skewSymmetric(r1);
r2x=skewSymmetric(r2);
r3x=skewSymmetric(r3);
r4x=skewSymmetric(r4);

%torques generated by the connection forces
n3=R43*n4+rc3x*F3+r4x*R43*f4+N3;
%n3=[0 0 0 ]';
n2=R32*n3+rc2x*F2+r3x*R32*f3+N2;
n1=R21*n2+rc1x*F1+r2x*R21*f2+N1;

%final final results

Tau1=n1'*k;
Tau2=n2'*k;
Tau3=n3'*k;

Qm=[n1'*k; n2'*k; n3'*k];

%StateSpaceCollect(Qm);

  